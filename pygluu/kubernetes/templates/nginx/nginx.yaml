# License terms and conditions for Gluu Cloud Native Edition:
# https://www.apache.org/licenses/LICENSE-2.0
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: gluu-ingress-base
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/app-root: "/identity"
    nginx.ingress.kubernetes.io/affinity: "cookie"
    nginx.ingress.kubernetes.io/session-cookie-name: "route"
    nginx.ingress.kubernetes.io/session-cookie-hash: "sha1"
spec:
  tls:
    - hosts:
      - FQDN
      secretName: tls-certificate
  rules:
  - host: FQDN
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: oxtrust
            port:
              number: 8080

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: gluu-ingress-openid-configuration
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/configuration-snippet: "rewrite /.well-known/openid-configuration /jans-auth/.well-known/openid-configuration$1 break;"
    nginx.ingress.kubernetes.io/rewrite-target: /jans-auth/.well-known/openid-configuration
spec:
  tls:
    - hosts:
      - FQDN
      secretName: tls-certificate
  rules:
  - host: FQDN
    http:
      paths:
      - path: /.well-known/openid-configuration
        pathType: Exact
        backend:
          service:
            name: auth-server
            port:
              number: 8080

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: gluu-ingress-uma2-configuration
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/configuration-snippet: "rewrite /.well-known/uma2-configuration /jans-auth/restv1/uma2-configuration$1 break;"
    nginx.ingress.kubernetes.io/rewrite-target: /jans-auth/restv1/uma2-configuration
spec:
  tls:
    - hosts:
      - FQDN
      secretName: tls-certificate
  rules:
  - host: FQDN
    http:
      paths:
      - path: /.well-known/uma2-configuration
        pathType: Exact
        backend:
          service:
            name: auth-server
            port:
              number: 8080


---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: gluu-ingress-webfinger
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/configuration-snippet: "rewrite /.well-known/webfinger /jans-auth/.well-known/webfinger$1 break;"
    nginx.ingress.kubernetes.io/rewrite-target: /jans-auth/.well-known/webfinger
spec:
  tls:
    - hosts:
      - FQDN
      secretName: tls-certificate
  rules:
  - host: FQDN
    http:
      paths:
      - path: /.well-known/webfinger
        pathType: Exact
        backend:
          service:
            name: auth-server
            port:
              number: 8080

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: gluu-ingress-simple-web-discovery
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/configuration-snippet: "rewrite /.well-known/simple-web-discovery /jans-auth/.well-known/simple-web-discovery$1 break;"
    nginx.ingress.kubernetes.io/rewrite-target: /jans-auth/.well-known/simple-web-discovery
spec:
  tls:
    - hosts:
      - FQDN
      secretName: tls-certificate
  rules:
  - host: FQDN
    http:
      paths:
      - path: /.well-known/simple-web-discovery
        pathType: Exact
        backend:
          service:
            name: auth-server
            port:
              number: 8080


---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: gluu-ingress-scim-configuration
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/configuration-snippet: "rewrite /.well-known/scim-configuration /jans-scim/restv1/scim-configuration$1 break;"
    nginx.ingress.kubernetes.io/rewrite-target: /jans-scim/restv1/scim-configuration
spec:
  tls:
    - hosts:
      - FQDN
      secretName: tls-certificate
  rules:
  - host: FQDN
    http:
      paths:
      - path: /.well-known/scim-configuration
        pathType: Exact
        backend:
          service:
            name: scim
            port:
              number: 8080

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: gluu-ingress-scim
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.org/ssl-services: "scim"
    nginx.ingress.kubernetes.io/proxy-next-upstream: "error timeout invalid_header http_500 http_502 http_503 http_504"
spec:
  tls:
    - hosts:
      - FQDN
      secretName: tls-certificate
  rules:
  - host: FQDN
    http:
      paths:
      - path: /jans-scim
        pathType: Prefix
        backend:
          service:
            name: scim
            port:
              number: 8080

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: gluu-ingress-fido-u2f-configuration
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/configuration-snippet: "rewrite /.well-known/fido-configuration /jans-auth/restv1/fido-configuration$1 break;"
    nginx.ingress.kubernetes.io/rewrite-target: /jans-auth/restv1/fido-configuration
spec:
  tls:
    - hosts:
      - FQDN
      secretName: tls-certificate
  rules:
  - host: FQDN
    http:
      paths:
      - path: /.well-known/fido-configuration
        pathType: Exact
        backend:
          service:
            name: auth-server
            port:
              number: 8080

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: gluu-ingress-fido2-configuration
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/configuration-snippet: "rewrite /.well-known/fido2-configuration /jans-fido2/restv1/configuration$1 break;"
    nginx.ingress.kubernetes.io/rewrite-target: /jans-fido2/restv1/configuration
spec:
  tls:
    - hosts:
      - FQDN
      secretName: tls-certificate
  rules:
  - host: FQDN
    http:
      paths:
      - path: /.well-known/fido2-configuration
        pathType: Exact
        backend:
          service:
            name: fido2
            port:
              number: 8080

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: gluu-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.org/ssl-services: "auth-server"
    nginx.ingress.kubernetes.io/proxy-next-upstream: "error timeout invalid_header http_500 http_502 http_503 http_504"
spec:
  tls:
    - hosts:
      - FQDN
      secretName: tls-certificate
  rules:
  - host: FQDN
    http:
      paths:
      - path: /jans-auth
        pathType: Prefix
        backend:
          service:
            name: auth-server
            port:
              number: 8080

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: gluu-ingress-stateful
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.org/ssl-services: "oxtrust"
    nginx.ingress.kubernetes.io/app-root: "/identity"
    nginx.ingress.kubernetes.io/affinity: "cookie"
    nginx.ingress.kubernetes.io/session-cookie-name: "route"
    nginx.ingress.kubernetes.io/session-cookie-hash: "sha1"
    nginx.ingress.kubernetes.io/proxy-next-upstream: "error timeout invalid_header http_500 http_502 http_503 http_504"
spec:
  tls:
    - hosts:
      - FQDN
      secretName: tls-certificate
  rules:
  - host: FQDN
    http:
      paths:
        - path: /identity
          pathType: Prefix
          backend:
            service:
              name: oxtrust
              port:
                number: 8080
        - path: /idp
          pathType: Prefix
          backend:
            service:
              name: oxshibboleth
              port:
                number: 8080
        - path: /passport
          pathType: Prefix
          backend:
            service:
              name: oxpassport
              port:
                number: 8080
---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: gluu-casa
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.org/ssl-services: "casa"
    nginx.ingress.kubernetes.io/app-root: "/casa"
    nginx.ingress.kubernetes.io/affinity: "cookie"
    nginx.ingress.kubernetes.io/session-cookie-name: "route"
    nginx.ingress.kubernetes.io/session-cookie-hash: "sha1"
    nginx.ingress.kubernetes.io/proxy-next-upstream: "error timeout invalid_header http_500 http_502 http_503 http_504"
spec:
  tls:
    - hosts:
      - FQDN
      secretName: tls-certificate
  rules:
  - host: FQDN
    http:
      paths:
      - path: /casa
        pathType: Prefix
        backend:
          service:
            name: casa
            port:
              number: 8080
